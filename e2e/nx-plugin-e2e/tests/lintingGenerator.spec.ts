import {
  createTestingWorkspace,
  TestingWorkspace,
} from "@chiubaka/nx-plugin-testing";

describe("lintingGenerator", () => {
  let workspace: TestingWorkspace;

  beforeAll(async () => {
    workspace = await createTestingWorkspace(
      "linting",
      "@chiubaka/nx-plugin",
      "dist/packages/nx-plugin",
    );

    await workspace.execNx(
      'generate @chiubaka/nx-plugin:linting --packageManager="npm"',
    );
    await workspace.git.commitAllFiles(
      "Add files generated by @chiubaka/nx-plugin:linting",
    );
  });

  afterAll(async () => {
    await workspace.execNx("reset");
  });

  describe("linting", () => {
    it("generates a working linting setup", async () => {
      await workspace.assert.linting.hasValidConfig();
    });

    it("generates a working lint fix setup", async () => {
      await workspace.assert.linting.canFixIssues();
    });

    it("generates a project without linting issues", async () => {
      await workspace.assert.linting.isClean();
    });

    it("generates a working lint-staged setup", async () => {
      await workspace.assert.linting.canFixStagedIssues();
    });
  });

  describe("scripts", () => {
    it("generates a working lint:affected script", async () => {
      await workspace.assert.script.runsSuccessfully("lint:affected");
    });

    it("generates a working lint:all scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:all");
    });

    it("generates a working lint:ci scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:ci");
    });

    it("generates a working lint:fix:all scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:fix:all");
    });

    it("generates a working lint:fix:packages scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:fix:packages");
    });

    it("generates a working lint:fix:root scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:fix:root");
    });

    it("generates a working lint:packages scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:packages");
    });

    it("generates a working lint:root scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:root");
    });

    it("generates a working lint:staged scripts", async () => {
      await workspace.assert.script.runsSuccessfully("lint:staged");
    });
  });
});
