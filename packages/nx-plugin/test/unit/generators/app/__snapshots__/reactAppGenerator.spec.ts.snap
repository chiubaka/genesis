// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`reactAppGenerator .babelrc matches snapshot 1`] = `
Object {
  "plugins": Array [],
  "presets": Array [
    Array [
      "@nrwl/react/babel",
      Object {
        "runtime": "automatic",
      },
    ],
  ],
}
`;

exports[`reactAppGenerator .browserslistrc matches snapshot 1`] = `
"# This file is used by:
# 1. autoprefixer to adjust CSS to support the below specified browsers
# 2. babel preset-env to adjust included polyfills
#
# For additional information regarding the format and rule options, please see:
# https://github.com/browserslist/browserslist#queries
#
# If you need to support different browsers in production, you may tweak the list below.

last 1 Chrome version
last 1 Firefox version
last 2 Edge major versions
last 2 Safari major version
last 2 iOS major versions
Firefox ESR
not IE 9-11 # For IE 9-11 support, remove 'not'."
`;

exports[`reactAppGenerator .eslintrc.json matches snapshot 1`] = `
Object {
  "extends": Array [
    "../../.eslintrc.json",
  ],
  "ignorePatterns": Array [
    "node_modules",
  ],
}
`;

exports[`reactAppGenerator E2E project .eslintrc.json matches snapshot 1`] = `
Object {
  "extends": Array [
    "plugin:cypress/recommended",
    "../../.eslintrc.json",
  ],
  "ignorePatterns": Array [
    "node_modules",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
        "*.js",
        "*.jsx",
      ],
      "rules": Object {},
    },
    Object {
      "files": Array [
        "src/plugins/index.js",
      ],
      "rules": Object {
        "@typescript-eslint/no-var-requires": "off",
        "no-undef": "off",
      },
    },
  ],
}
`;

exports[`reactAppGenerator E2E project cypress.config.ts matches snapshot 1`] = `
"import { defineConfig } from 'cypress';
import { nxE2EPreset } from '@nrwl/cypress/plugins/cypress-preset';

export default defineConfig({
  e2e: nxE2EPreset(__dirname)
});
"
`;

exports[`reactAppGenerator E2E project project.json matches snapshot 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "implicitDependencies": Array [
    "react-app",
  ],
  "projectType": "application",
  "sourceRoot": "e2e/react-app-e2e/src",
  "tags": Array [],
  "targets": Object {
    "e2e": Object {
      "configurations": Object {
        "production": Object {
          "devServerTarget": "react-app:serve:production",
        },
      },
      "executor": "@nrwl/cypress:cypress",
      "options": Object {
        "cypressConfig": "e2e/react-app-e2e/cypress.config.ts",
        "devServerTarget": "react-app:serve:development",
        "testingType": "e2e",
      },
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "e2e/react-app-e2e/**/*.{js,ts}",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
  },
}
`;

exports[`reactAppGenerator E2E project tsconfig.json matches snapshot 1`] = `
Object {
  "compilerOptions": Object {
    "allowJs": true,
    "outDir": "../../dist/out-tsc",
    "sourceMap": false,
    "types": Array [
      "cypress",
      "node",
    ],
  },
  "extends": "../../tsconfig.base.json",
  "include": Array [
    "src/**/*.ts",
    "src/**/*.js",
    "cypress.config.ts",
  ],
}
`;

exports[`reactAppGenerator jest.config.ts matches snapshot 1`] = `
"export default {
  displayName: \\"react-app\\",
  preset: \\"../../jest.preset.js\\",
  testEnvironment: \\"jsdom\\",
  transform: {
    "^(?!.*\\.(js|jsx|ts|tsx|css|json)$)": "@nrwl/react/plugins/jest",
    "^.+\\.[tj]sx?$": "babel-jest",
  },
  moduleFileExtensions: [\\"ts\\", \\"tsx\\", \\"js\\", \\"jsx\\"],
  coverageDirectory: \\"../../reports/coverage/packages/react-app\\",
  reporters: [
    \\"default\\",
    [
      \\"jest-junit\\",
      {
        addFileAttribute: \\"true\\",
        classNameTemplate: \\"{suitename}\\",
        outputDirectory: \\"reports/junit\\",
        outputName: \\"react-app.xml\\",
      },
    ],
  ],
};
"
`;

exports[`reactAppGenerator project.json matches snapshot 1`] = `
Object {
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "sourceRoot": "packages/react-app/src",
  "tags": Array [],
  "targets": Object {
    "build": Object {
      "configurations": Object {
        "development": Object {
          "extractLicenses": false,
          "optimization": false,
          "sourceMap": true,
          "vendorChunk": true,
        },
        "production": Object {
          "extractLicenses": true,
          "fileReplacements": Array [
            Object {
              "replace": "packages/react-app/src/environments/environment.ts",
              "with": "packages/react-app/src/environments/environment.prod.ts",
            },
          ],
          "namedChunks": false,
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "vendorChunk": false,
        },
      },
      "defaultConfiguration": "production",
      "executor": "@nrwl/web:webpack",
      "options": Object {
        "assets": Array [
          "packages/react-app/src/favicon.ico",
          "packages/react-app/src/assets",
        ],
        "baseHref": "/",
        "compiler": "babel",
        "index": "packages/react-app/src/index.html",
        "main": "packages/react-app/src/main.tsx",
        "outputPath": "dist/packages/react-app",
        "polyfills": "packages/react-app/src/polyfills.ts",
        "scripts": Array [],
        "styles": Array [
          "packages/react-app/src/styles.scss",
        ],
        "tsConfig": "packages/react-app/tsconfig.app.json",
        "webpackConfig": "@nrwl/react/plugins/webpack",
      },
      "outputs": Array [
        "{options.outputPath}",
      ],
    },
    "build-storybook": Object {
      "configurations": Object {
        "ci": Object {
          "quiet": true,
        },
      },
      "executor": "@nrwl/storybook:build",
      "options": Object {
        "config": Object {
          "configFolder": "packages/react-app/.storybook",
        },
        "outputPath": "dist/storybook/react-app",
        "uiFramework": "@storybook/react",
      },
      "outputs": Array [
        "{options.outputPath}",
      ],
    },
    "lint": Object {
      "executor": "@nrwl/linter:eslint",
      "options": Object {
        "lintFilePatterns": Array [
          "packages/react-app",
        ],
      },
      "outputs": Array [
        "{options.outputFile}",
      ],
    },
    "serve": Object {
      "configurations": Object {
        "development": Object {
          "buildTarget": "react-app:build:development",
        },
        "production": Object {
          "buildTarget": "react-app:build:production",
          "hmr": false,
        },
      },
      "defaultConfiguration": "development",
      "executor": "@nrwl/web:dev-server",
      "options": Object {
        "buildTarget": "react-app:build",
        "hmr": true,
      },
    },
    "storybook": Object {
      "configurations": Object {
        "ci": Object {
          "quiet": true,
        },
      },
      "executor": "@nrwl/storybook:storybook",
      "options": Object {
        "config": Object {
          "configFolder": "packages/react-app/.storybook",
        },
        "port": 4400,
        "uiFramework": "@storybook/react",
      },
    },
    "test": Object {
      "executor": "@nrwl/jest:jest",
      "options": Object {
        "jestConfig": "packages/react-app/jest.config.ts",
        "passWithNoTests": true,
      },
      "outputs": Array [
        "reports/coverage/packages/react-app",
        "reports/junit/react-app.xml",
      ],
    },
  },
}
`;

exports[`reactAppGenerator storybook .storybook/main.ts matches snapshot 1`] = `
"import { rootMain } from '../../../.storybook/main';
import type { StorybookConfig, Options } from '@storybook/core-common';


const config: StorybookConfig = {
  ...rootMain,
  
  core: { ...rootMain.core, builder: 'webpack5' },
  

  stories: [
    ...rootMain.stories,
    '../src/app/**/*.stories.mdx',
    '../src/app/**/*.stories.@(js|jsx|ts|tsx)'
  ],
  addons: [...(rootMain.addons || []) , '@nrwl/react/plugins/storybook' 
    
    
  ],
  webpackFinal: async (config, { configType }: Options) => {
    // apply any global webpack configs that might have been specified in .storybook/main.ts
    if (rootMain.webpackFinal) {
      config = await rootMain.webpackFinal(config, { configType } as Options);
    }

    // add your own webpack tweaks if needed

    return config;
  },
};

module.exports = config;
"
`;

exports[`reactAppGenerator storybook .storybook/preview.ts matches snapshot 1`] = `""`;

exports[`reactAppGenerator storybook .storybook/tsconfig.json matches snapshot 1`] = `
Object {
  "compilerOptions": Object {
    "emitDecoratorMetadata": true,
    "outDir": "",
  },
  "exclude": Array [
    "../**/*.spec.ts",
    "../**/*.spec.js",
    "../**/*.spec.tsx",
    "../**/*.spec.jsx",
  ],
  "extends": "../tsconfig.json",
  "files": Array [
    "../../../node_modules/@nrwl/react/typings/styled-jsx.d.ts",
    "../../../node_modules/@nrwl/react/typings/cssmodule.d.ts",
    "../../../node_modules/@nrwl/react/typings/image.d.ts",
  ],
  "include": Array [
    "../src/**/*.stories.ts",
    "../src/**/*.stories.js",
    "../src/**/*.stories.jsx",
    "../src/**/*.stories.tsx",
    "../src/**/*.stories.mdx",
    "*.ts",
    "*.js",
  ],
}
`;

exports[`reactAppGenerator tsconfig.app.json or tsconfig.lib.json matches snapshot 1`] = `
Object {
  "compilerOptions": Object {
    "declaration": true,
  },
  "exclude": Array [
    "jest.config.ts",
    "**/*.spec.ts",
    "**/*.test.ts",
    "**/*.spec.tsx",
    "**/*.test.tsx",
    "test",
    "**/*.stories.ts",
    "**/*.stories.js",
    "**/*.stories.jsx",
    "**/*.stories.tsx",
  ],
  "extends": "./tsconfig.json",
  "include": Array [
    "**/*.ts",
    "**/*.tsx",
  ],
}
`;

exports[`reactAppGenerator tsconfig.json matches snapshot 1`] = `
Object {
  "compilerOptions": Object {
    "jsx": "react-jsx",
    "lib": Array [
      "dom",
      "dom.iterable",
      "esnext",
    ],
    "module": "esnext",
    "outDir": "../../dist/out-tsc",
    "target": "es5",
  },
  "exclude": Array [
    "**/*.stories.ts",
    "**/*.stories.js",
    "**/*.stories.jsx",
    "**/*.stories.tsx",
  ],
  "extends": "../../tsconfig.base.json",
  "files": Array [
    "../../node_modules/@nrwl/react/typings/cssmodule.d.ts",
    "../../node_modules/@nrwl/react/typings/image.d.ts",
  ],
  "include": Array [],
  "references": Array [
    Object {
      "path": "./tsconfig.app.json",
    },
    Object {
      "path": "./tsconfig.spec.json",
    },
    Object {
      "path": "./.storybook/tsconfig.json",
    },
  ],
}
`;

exports[`reactAppGenerator tsconfig.spec.json matches snapshot 1`] = `
Object {
  "compilerOptions": Object {
    "module": "commonjs",
    "types": Array [
      "jest",
      "node",
    ],
  },
  "extends": "./tsconfig.json",
  "include": Array [
    "jest.config.ts",
    "**/*.spec.ts",
    "**/*.test.ts",
    "**/*.spec.tsx",
    "**/*.test.tsx",
    "**/*.d.ts",
    "test",
  ],
}
`;
